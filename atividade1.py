# -*- coding: utf-8 -*-
"""atividade1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16rL7BouKbtcZ3BN_weg-kRm0_AKpUu-l

# IFMA - Sistemas de Informação - Topicos Especiais I
## Lucas Felipe dos Reis Ferreira
## 20191SI0017

# Questão 1
Defina uma lista de dicionários representando informações sobre algum problema real do seu dia a dia. Mostre 1 exemplo de filtragem desta lista da seguinte forma:

a) sem list comprehension

b) com list comprehension
"""

filmes = [    {'titulo': 'A Viagem de Chihiro', 'genero': 'Animação', 'ano': 2001},    {'titulo': 'O Poderoso Chefão', 'genero': 'Drama', 'ano': 1972},    {'titulo': 'Cidade de Deus', 'genero': 'Drama', 'ano': 2002},    {'titulo': 'Interestelar', 'genero': 'Ficção científica', 'ano': 2014},    {'titulo': 'La La Land: Cantando Estações', 'genero': 'Musical', 'ano': 2016},    {'titulo': 'Clube da Luta', 'genero': 'Drama', 'ano': 1999}]

filmes_drama = []

for filme in filmes:
    if filme['genero'] == 'Drama':
        filmes_drama.append(filme['titulo'])

print("Filmes de drama:", filmes_drama)

filmes_drama = [filme['titulo'] for filme in filmes if filme['genero'] == 'Drama']

print("Filmes de drama:", filmes_drama)

"""# Questão 2
Defina uma função que combina duas listas de dicionários em uma nova lista a partir de uma chave em comum no estilo Join do SQL. De exêmplos de uso de sua função. Exemplo: L1 = [{'nome':'ana','idade':19},{'nome':'daniel', 'idade':23}], L2=[{'nome':'ana','salario':2500},{'nome':'daniel', 'salario':2100}] deve resultar em uma lista L3 = [
{'nome':'ana','idade':19, 'salario':2500},{'nome':'daniel', 'idade':23, 'salario':2100}]. Por exemplo:  L3 = combina_listas_dict(L1, L2). Sua função deve funcionar para qualquer exemplo, não apenas o exemplo dado aqui.
"""

filmes_info_adicional = [    {'titulo': 'A Viagem de Chihiro', 'diretor': 'Hayao Miyazaki', 'duracao': 125},    {'titulo': 'O Poderoso Chefão', 'diretor': 'Francis Ford Coppola', 'duracao': 175},    {'titulo': 'Cidade de Deus', 'diretor': 'Fernando Meirelles', 'duracao': 130},    {'titulo': 'Interestelar', 'diretor': 'Christopher Nolan', 'duracao': 169},    {'titulo': 'La La Land: Cantando Estações', 'diretor': 'Damien Chazelle', 'duracao': 128},    {'titulo': 'Clube da Luta', 'diretor': 'David Fincher', 'duracao': 139}]

def combina_listas_dict(lista1, lista2, chave):
    dict_combinado = {}

    for dict1 in lista1:
        valor_chave = dict1[chave]
        dict_combinado[valor_chave] = dict1.copy()

    for dict2 in lista2:
        valor_chave = dict2[chave]

        if valor_chave in dict_combinado:
            dict_combinado[valor_chave].update(dict2)
        else:
            dict_combinado[valor_chave] = dict2.copy()

    return list(dict_combinado.values())

L3 = combina_listas_dict(filmes, filmes_info_adicional, 'titulo')
print(L3)

"""# Questão 3
Seja L1 = [1,2,3,4] e L2= [1,2,3,4] avalie e justifique sua respostas para os dois casos abaixo:

a) L1==L2 ?

b) L1 is L2 ?
"""

L1 = [1, 2, 3, 4]
L2 = [1, 2, 3, 4]

print(L1 == L2)
print(L1 is L2)

"""a) L1 == L2 compara o conteúdo das listas e retorna *True* se elas são iguais, logo têm os mesmos elementos na mesma ordem.

b) L1 is L2 compara a identidade dos objetos se eles referem-se ao mesmo objeto, nesse caso retorna false.

# Questão 4
Defina uma função que possua parâmetros identificados e outros não identificados. Mostre exemplos de sua função com variações no uso dos parâmetros
"""

def informacoes_filmes(titulo, *informacoes):
    print("Titulo do filme:", titulo)
    for info in informacoes:
        print(info)

informacoes_filmes('A Viagem de Chihiro', 'Genero: Animação', 'Ano: 2001', 'Diretor: Hayao Miyazaki')

def imprime_filmes(*filmes, **parametros):
    for filme in filmes:
        print("Título:", filme['titulo'])
        print("Gênero:", filme['genero'])
        print("Ano:", filme['ano'])
        print("-----")

imprime_filmes(*filmes)

"""# Questão 5
Em python o laço FOR não usa índices. Como então podemos percorrer duas listas imprimindo seus elementos relacionados? Por exemplo, a lista de meses e quantidade de água da chuva precipitada (https://www.climatempo.com.br/climatologia/94/saoluis-ma). Exemplo: meses = ['jan', 'fev', 'mar',... ,'nov', 'dez'] e precipitacao = [244, 373, 428, ..., 11, 77].
"""

nomes = ['Ana', 'João', 'Maria']
idades = [20, 25, 30]

for nome, idade in zip(nomes, idades):
    print(nome, idade)

for filme, ano in zip(filmes, range(2001, 2017)):
    print(f"{filme['titulo']} ({ano}) - {filme['genero']}")

"""# Questão 6
Escreva uma função que devolva uma matriz transposta a partir de uma dada em forma de lista de listas. De exemplos de uso. Não use numpy. Somente python básico.
"""

matriz_original = [[1, 2, 3],
                   [4, 5, 6],
                   [7, 8, 9]]

def matriz_transposta(matriz):
    transposta = [list(x) for x in zip(*matriz)]
    return transposta

matriz_transposta = matriz_transposta(matriz_original)

print("Matriz original:")
for linha in matriz_original:
    print(linha)

print("Matriz transposta:")
for linha in matriz_transposta:
    print(linha)

def matriz_transposta(lista):
    return [[linha[i] for linha in lista] for i in range(len(lista[0]))]

filmes_transpostos = matriz_transposta([list(filme.values()) for filme in filmes])

for linha in filmes_transpostos:
    print(linha)